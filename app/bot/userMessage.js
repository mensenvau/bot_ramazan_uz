const userMessage = async(bot, msg, user) => {

    let key = require("../keyword/users")[user.lang || "kiril"]
    let lang = require("../lang")[user.lang || "kiril"]
    let db = require('../db/db').promise();
    let chatId = msg.chat.id;
    let first_name = msg.chat.first_name;
    let tx = msg.text;
    let msgId = msg.message_id;

    //start payti 1-qisim
    if (user.steep == 0) {
        bot.sendMessage(chatId, "<b>Assalomu alaykum va rahmatullohi va barakotuh </b> @Ramazanuz_bot ga xush kelibsiz. Botni ishga tushirish uchun o'zingizga qulay bo'lgan alifboni tanglang!\n" +
            "\n" +
            "<b>A—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º –≤–∞ —Ä–∞“≥–º–∞—Ç—É–ª–ª–æ“≥–∏ –≤–∞ –±–∞—Ä–∞–∫–æ—Ç—É“≥  </b>@Ramazanuz_bot –≥–∞ —Ö—É—à –∫–µ–ª–∏–±—Å–∏–∑ . –ë–æ—Ç–Ω–∏ –∏—à–≥–∞ —Ç—É—à–∏—Ä–∏—à —É—á—É–Ω —û–∑–∏–Ω–≥–∏–∑–≥–∞ “õ—É–ª–∞–π –±—û–ª–≥–∞–Ω –∞–ª–∏—Ñ–±–æ–Ω–∏ —Ç–∞–Ω–≥–ª–∞–Ω–≥!", {
                reply_markup: key.lang,
                parse_mode: "HTML"
            })
        return;
    }



    //savol-javob  2-qisim
    if (user.steep == 2) {
        await db.query("UPDATE users SET steep=1 WHERE chat_id=?", [chatId]);
        let soni = await db.query("SELECT *FROM qanswer WHERE keylist like ? ", ["%" + tx + "%"]);
        bot.sendMessage(chatId, lang["id10"](tx, soni[0].length), {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: lang["id11"],
                        switch_inline_query_current_chat: tx
                    }]
                ]
            },
            parse_mode: "HTML"
        })
        return;
    }


    //start yuborganda
    if (tx == '/start' || tx == '‚óÄÔ∏è Orqaga' || tx == '‚óÄÔ∏è –û—Ä“õ–∞–≥–∞') {
        await db.query("UPDATE users SET steep=1 WHERE chat_id=?", [chatId]);
        bot.sendMessage(chatId, lang["id1"], {
            parse_mode: "HTML",
            reply_markup: key.start,
        })
    }

    //sozlamalar
    if (tx == '‚öôÔ∏è Sozlamalar' || tx == '‚öôÔ∏è –°–æ–∑–ª–∞–º–∞–ª–∞—Ä') {
        bot.sendMessage(chatId, lang['id2'], {
            parse_mode: "HTML",
            reply_markup: key.settings,
        })
    }

    //sozlamalar >  alifbo
    if (tx == '‚ôªÔ∏è Alifbo' || tx == '‚ôªÔ∏è A–ª–∏—Ñ–±–æ') {
        await db.query("UPDATE users SET steep=0 WHERE chat_id=?", [chatId]);
        bot.sendMessage(chatId, lang["id3"], {
            parse_mode: "HTML",
            reply_markup: key.lang,
        })
    }

    //sozlamalar >  hudud
    if (tx == 'üìç Hududingiz' || tx == 'üìç “≤—É–¥—É–¥–∏–Ω–≥–∏–∑') {
        let adr = await db.query("SELECT *FROM address")
        bot.sendMessage(chatId, lang["id6"], {
            parse_mode: "HTML",
            reply_markup: key.address(adr[0], "hudud")
        })
    }

    //taqvim
    if (tx == 'üóì  Taqvim' || tx == 'üóì  –¢–∞“õ–≤–∏–º') {
        let adr = await db.query("SELECT *FROM address");

        bot.sendMessage(chatId, lang["id4"], {
            parse_mode: "HTML",
            reply_markup: key.address(adr[0], "taqim"),
        })
    }


    // // Qur'on tilovati va darslari
    // if (tx == "üìñ Qur'on tilovati va darslari" || tx == "üìñ “ö—É—Ä—ä–æ–Ω —Ç–∏–ª–æ–≤–∞—Ç–∏ –≤–∞ –¥–∞—Ä—Å–ª–∞—Ä–∏") {
    //     bot.sendMessage(chatId, lang["id8"], {
    //         parse_mode: "HTML",
    //         reply_markup: key.quron,
    //     })
    // }


    // 'üí¨ –°–∞–≤–æ–ª-–∂–∞–≤–æ–±'
    if (tx == 'üí¨ Savol-javob' || tx == 'üí¨ –°–∞–≤–æ–ª-–∂–∞–≤–æ–±') {
        await db.query("UPDATE users SET steep=2 WHERE chat_id=?", [chatId]);
        bot.sendMessage(chatId, lang["id9"], {
            parse_mode: "HTML",
            reply_markup: key.start,
        })
    }



    //error >  hozicha
    if ( tx == "Asmaul husna" || tx == '‚òùÔ∏èMaruzalar' || tx=='‚úçÔ∏è Ismga tabrik'
         || tx=='‚òùÔ∏è–ú–∞—Ä—É–∑–∞–ª–∞—Ä' || tx=="A—Å–º–∞—É–ª “≥—É—Å–Ω–∞" || tx=='‚úçÔ∏è –ò—Å–º–≥–∞ —Ç–∞–±—Ä–∏–∫'
         || tx == "üìñ Qur'on tilovati va darslari" || tx == "üìñ “ö—É—Ä—ä–æ–Ω —Ç–∏–ª–æ–≤–∞—Ç–∏ –≤–∞ –¥–∞—Ä—Å–ª–∞—Ä–∏") {
        bot.sendMessage(chatId, lang["err"], {
            parse_mode: "HTML"
        })
    }

}



module.exports = userMessage